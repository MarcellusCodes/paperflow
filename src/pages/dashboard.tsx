import { Plus } from "lucide-react";
import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { AppShell } from "~/components/app-shell";
import { Navbar } from "~/components/navbar";
import OrganizationCreateForm from "~/components/organization-create-form";
import { Button, buttonVariants } from "~/components/ui/button";
import { cn } from "~/lib/utils";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import Loading from "~/components/loading";
import { appShellLinks } from "~/constants/app-shell-nav";
import { dasboardCards } from "~/constants/dashboard-cards";

export const DashboardNav = () => {
  return (
    <ul className="relative flex flex-col items-center gap-4">
      {appShellLinks.map((link) => (
        <li key={link.name}>
          <Link
            className={cn(
              buttonVariants({ variant: "link", size: "lg" }),
              "text-lg"
            )}
            href={link.href}
          >
            {link.name}
          </Link>
        </li>
      ))}
    </ul>
  );
};

const Dashboard: NextPage = () => {
  const { data: sessionData, status } = useSession();

  if (status === "loading") return <Loading pageTitle="Dashboard" />;

  return (
    <>
      <Head>
        <title>Paperflow Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <AppShell navbar={<DashboardNav />} pageTitle="Dashboard">
        <div className="flex h-full w-full flex-col items-start gap-8">
          {sessionData.user.organization && (
            <>
              <Card>
                <CardHeader>
                  <CardTitle>
                    Organization: {sessionData?.user.organization.name}
                  </CardTitle>
                </CardHeader>
              </Card>
              <div className="grid w-full grid-cols-4 gap-4">
                {dasboardCards.map((card, index) => (
                  <Card key={index} className="grid place-items-center">
                    <CardHeader>
                      <CardTitle className="text-xl">{card.name}</CardTitle>
                    </CardHeader>
                    <CardContent>
                      <Image
                        width="112"
                        height="112"
                        src={card.icon}
                        alt="areas illustration"
                      />
                    </CardContent>
                    <CardFooter>
                      <Button asChild>
                        <Link href={card.href}>
                          Create {card.name.toLowerCase()}
                        </Link>
                      </Button>
                    </CardFooter>
                  </Card>
                ))}
              </div>
            </>
          )}
          {!sessionData?.user.organization && (
            <div className="flex flex-col items-center justify-center gap-6 h-full w-full">
              <div className="relative -mb-12 h-[256px] w-[256px]">
                <Image src="/organization.png" fill alt="add organization" />
              </div>
              <h2 className="scroll-m-20 text-3xl font-semibold tracking-tight transition-colors first:mt-0">
                You currently have no Organization
              </h2>
              <OrganizationCreateForm />
            </div>
          )}
        </div>
      </AppShell>
    </>
  );
};

export default Dashboard;
